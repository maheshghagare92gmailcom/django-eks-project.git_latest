# ========================
# Django Service
# ========================
apiVersion: v1
kind: Service
metadata:
  name: django
  labels:
    app: django
spec:
  type: LoadBalancer
  selector:
    app: django
    tier: app
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP

---

# ========================
# PersistentVolumeClaim
# ========================
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: django-app-pvc
  labels:
    app: django
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: efs-sc
  resources:
    requests:
      storage: 5Gi

---

# ========================
# Django Deployment
# ========================
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
  labels:
    app: django
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django
      tier: app
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: django
        tier: app
    spec:
      # This allows Kubernetes to pull from private ECR
      imagePullSecrets:
        - name: ecr-secret
      volumes:
        - name: django-app-data
          persistentVolumeClaim:
            claimName: django-app-pvc
      containers:
        # --------------------
        # Django App Container
        # --------------------
        - name: app
          image: 029179923871.dkr.ecr.eu-west-2.amazonaws.com/django-k8s-app-eks:latest
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: django-app-data
              mountPath: /vol/web
          env:
            - name: DB_HOST
              value: django-k8s-db.c1qgwuaeem2d.eu-west-2.rds.amazonaws.com
            - name: DB_NAME
              value: djangoproject
            - name: DB_USER
              value: djangouser
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: db-password
                  key: password
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: django
                  key: secret
            - name: ALLOWED_HOSTS
              value: '*'
        # --------------------
        # Proxy Container
        # --------------------
        - name: proxy
          image: 029179923871.dkr.ecr.eu-west-2.amazonaws.com/django-k8s-proxy-eks:latest
          ports:
            - containerPort: 8000
          volumeMounts:
            - name: django-app-data
              mountPath: /vol/web
          env:
            - name: APP_HOST
              value: '127.0.0.1'
            - name: APP_PORT
              value: '8080'
